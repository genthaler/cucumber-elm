module GherkinRecordTest exposing (..)

import ElmTest exposing (..)
import GherkinRecord exposing (..)


feature =
    Feature
        { feature = "Having fun"
        , asA = "person"
        , inOrderTo = "have fun"
        , iWantTo = "have fun"
        , background =
            { background = "when I were a lad"
            , steps =
                [ Given "a precondition has value <param_1>" (DocString "")
                , And "something with <param_2>" (DataTable [ [] ])
                , Then "check <param_3> is the output" NoArg
                ]
            }
        , scenarios =
            [ ScenarioOutline
                { scenario = "guys are swimming"
                , steps =
                    [ Given "a precondition has value <param_1>" (DocString "")
                    , And "something with <param_2>" (DataTable [ [] ])
                    , Then "check <param_3> is the output" NoArg
                    ]
                , examples =
                    [ [ "" ]
                    ]
                }
            , Scenario
                { scenario = "guys are sailing"
                , steps =
                    [ Given "a precondition is valid" NoArg
                    , When "an action is performed" NoArg
                    , Then "something should be asserted" NoArg
                    ]
                }
            ]
        }


featureTest : Test
featureTest =
    test "Features" (assertEqual feature feature)


gherkinSuite : Test
gherkinSuite =
    suite "Features"
        [ featureTest
        ]


all : Test
all =
    suite "Counter tests"
        [ gherkinSuite
        ]
